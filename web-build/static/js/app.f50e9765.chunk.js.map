{"version":3,"sources":["screens/HomeScreen.js","App.js"],"names":["HomeScreen","getWord","word","searchKeyword","toLowerCase","fetch","then","data","status","json","response","wordData","definitions","definition","description","lexicalCategory","wordtype","setState","state","text","isSearchPressed","isLoading","View","style","flex","borderWidth","backgroundColor","centerComponent","color","fontSize","styles","inputBoxContainer","Text","onChangeText","examples","TextInput","inputBox","value","this","TouchableOpacity","searchButton","onPress","searchText","outputContainer","justifyContent","marginLeft","detailsContainer","detailsTitle","flexDirection","flexWrap","Component","StyleSheet","create","alignItems","width","alignSelf","height","textAlign","margin","borderRadius","fontWeight","App"],"mappings":"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","file":"static/js/app.f50e9765.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, View, Text, TextInput, TouchableOpacity } from 'react-native';\nimport { Header } from 'react-native-elements';\nexport default class HomeScreen extends Component{\n  constructor() {\n    super();\n    this.state = {\n      text: '',\n      isSearchPressed: false,\n      isLoading: false,\n      word  : \"Loading...\",\n      lexicalCategory :'',\n      definition : \"\"\n    };\n  }\n\n  getWord=(word)=>{\n    var searchKeyword=word.toLowerCase()\n    var url;\n    url = \"https://rupinwhitehatjr.github.io/dictionary/\"+searchKeyword+\".json\"\n\n    return fetch(url)\n    .then((data)=>{\n      if(data.status===200)\n      {\n        return data.json()\n      }\n      else\n      {\n        return null\n      }\n    })\n    .then((response)=>{\n\n        var responseObject = response\n        if(responseObject)\n        {\n          var wordData = responseObject.definitions[0]\n\n          var definition=wordData.description\n          var lexicalCategory=wordData.wordtype\n\n          this.setState({\n            \"word\" : this.state.text, \n            \"definition\" :definition,\n            \"lexicalCategory\": lexicalCategory     \n            \n          })\n        }\n        else\n        {\n          this.setState({\n            \"word\" : this.state.text, \n            \"definition\" :\"Not Found\",\n            \n          })\n\n        }\n    \n    })\n  }\n\n  render(){\n    return(\n      <View style={{ flex: 1, borderWidth: 2 }}>\n        \n        <Header\n          backgroundColor={'purple'}\n          centerComponent={{\n            text: 'Pocket Dictionary',\n            style: { color: '#fff', fontSize: 20 },\n          }}\n        />\n        <View style={styles.inputBoxContainer}>\n      \n        <Text \n           onChangeText={text => {\n              this.setState({\n                text: text,\n                isSearchPressed: false,\n                word  : \"Loading...\",\n                lexicalCategory :'',\n                examples : [],\n                definition : \"\"\n              });\n           }}\n        />\n  \n     {/*   <input \n           onChangeText={text => {\n              this.setState({\n                text: text,\n                isSearchPressed: false,\n                word  : \"Loading...\",\n                lexicalCategory :'',\n                examples : [],\n                definition : \"\"\n              });\n           }}\n        /> \n        */}\n      {/*\n      <TouchableOpacity \n           onChangeText={text => {\n              this.setState({\n                text: text,\n                isSearchPressed: false,\n                word  : \"Loading...\",\n                lexicalCategory :'',\n                examples : [],\n                definition : \"\"\n              });\n           }}\n        /> \n      */}\n      \n          <TextInput\n            style={styles.inputBox}\n            onChangeText={text => {\n              this.setState({\n                text: text,\n                isSearchPressed: false,\n                word  : \"Loading...\",\n                lexicalCategory :'',\n                examples : [],\n                definition : \"\"\n              });\n            }}\n            value={this.state.text}\n          />\n          <TouchableOpacity\n            style={styles.searchButton}\n            onPress={() => {\n              this.setState({ isSearchPressed: true });\n              this.getWord(this.state.text)\n            }}>\n            <Text style={styles.searchText}>Search</Text>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.outputContainer}>\n          <Text style={{fontSize:20}}>\n            {\n              this.state.isSearchPressed && this.state.word === \"Loading...\"\n              ? this.state.word\n              : \"\"\n            }\n          </Text>\n            {\n              this.state.word !== \"Loading...\" ?\n              (\n                <View style={{justifyContent:'center', marginLeft:10 }}>\n                  <View style={styles.detailsContainer}>\n                    <Text style={styles.detailsTitle}>\n                      Word :{\" \"}\n                    </Text>\n                    <Text style={{fontSize:18 }}>\n                      {this.state.word}\n                    </Text>\n                  </View>\n                  <View style={styles.detailsContainer}>\n                    <Text style={styles.detailsTitle}>\n                      Type :{\" \"}\n                    </Text>\n                    <Text style={{fontSize:18}}>\n                      {this.state.lexicalCategory}\n                    </Text>\n                  </View>\n                  <View style={{flexDirection:'row',flexWrap: 'wrap'}}>\n                    <Text style={styles.detailsTitle}>\n                      Definition :{\" \"}\n                    </Text>\n                    <Text style={{ fontSize:18}}>\n                      {this.state.definition}\n                    </Text>\n                  </View>\n                </View>\n              )\n              :null\n            }\n        </View>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  inputBoxContainer: {\n    flex:0.3,\n    alignItems:'center',\n    justifyContent:'center'\n  },\n  inputBox: {\n    width: '80%',\n    alignSelf: 'center',\n    height: 40,\n    textAlign: 'center',\n    borderWidth: 4,\n  },\n  searchButton: {\n    width: '40%',\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 10,\n    borderWidth: 2,\n    borderRadius: 10,\n  },\n  searchText:{\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  outputContainer:{\n    flex:0.7,\n    alignItems:'center'\n  },\n  detailsContainer:{\n    flexDirection:'row',\n    alignItems:'center'\n  },\n  detailsTitle:{\n    color:'orange',\n    fontSize:20,\n    fontWeight:'bold'\n  }\n});\n","import React, { Component } from 'react';\nimport { StyleSheet, View, Text } from 'react-native';\nimport HomeScreen from './screens/HomeScreen';\n\nexport default class App extends Component{\n  render(){\n    return(\n      <View style={{flex:1}}>\n        <HomeScreen />\n      </View>\n    )\n  }\n}\n"],"sourceRoot":""}